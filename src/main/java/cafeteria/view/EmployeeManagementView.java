/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cafeteria.view;

import cafeteria.dao.EmployeeDAO;
import cafeteria.entity.Employee;
import cafeteria.utils.*;

import java.awt.CardLayout;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

public class EmployeeManagementView extends javax.swing.JInternalFrame {

    List<Employee> listNv = new ArrayList<>();
    EmployeeDAO nhanVienDAO = new EmployeeDAO();
    DefaultTableModel model;
    CardLayout cardlayout;
    private int row;

    public EmployeeManagementView() {
        initComponents();
        cardlayout = (CardLayout) pnlScreenMain.getLayout();
        lblTenNhanVien.setText(Auth.user.getTenNhanVien());
        ImageIcon image = ImageHelper.getImage(Auth.user.getHinh(), 175, 142);
        if (Objects.nonNull(image)) {
            lblUser.setIcon(image);
        }
        OclockHelper.startOclock(lblTimE);

        model = (DefaultTableModel) tbl_DanhSachNV.getModel();
        this.fillTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GioiTInh = new javax.swing.ButtonGroup();
        TrangThai = new javax.swing.ButtonGroup();
        pnlScreenMain = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        lblAnh = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaNhanVien = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenNhanVien = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtNgaySinh = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cboLoaiNV = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtMatKhau = new javax.swing.JPasswordField();
        jPanel4 = new javax.swing.JPanel();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        txtHeSoLuong = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        rdoHoatDong = new javax.swing.JRadioButton();
        rdoVoHieu = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_DanhSachNV = new javax.swing.JTable();
        pnlMenu = new javax.swing.JPanel();
        lblTimE = new javax.swing.JLabel();
        btnCapNhat = new javax.swing.JButton();
        btnDanhSachNhanVien = new javax.swing.JButton();
        lblUser = new javax.swing.JLabel();
        lblTenNhanVien = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255), 2));
        setClosable(true);
        setTitle("Quản lý nhân viên");

        pnlScreenMain.setLayout(new CardLayout());

        lblAnh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAnh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblAnh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblAnhMouseClicked(evt);
            }
        });

        jLabel2.setText("Mã nhân viên");

        txtMaNhanVien.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N

        jLabel3.setText("Tên nhân viên");

        txtTenNhanVien.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N

        jLabel4.setText("Địa chỉ");

        txtDiaChi.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N

        jLabel5.setText("Email");

        txtEmail.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N

        txtNgaySinh.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N

        txtSDT.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N

        jLabel8.setText("Ngày sinh");

        jLabel9.setText("SĐT");

        jLabel10.setText("Mật khẩu");

        cboLoaiNV.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        cboLoaiNV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quản lý", "Thu ngân", "Phục vụ", "Bảo vệ", "Pha chế", " " }));
        cboLoaiNV.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboLoaiNVItemStateChanged(evt);
            }
        });

        jLabel7.setText("Chức vụ");

        jLabel11.setText("Lương/giờ");

        jPanel4.setLayout(new java.awt.GridLayout(3, 1, 0, 30));

        btnInsert.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnInsert.setText("Thêm");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        jPanel4.add(btnInsert);

        btnUpdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnUpdate.setText("Sửa");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel4.add(btnUpdate);

        btnNew.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNew.setText("Làm mới");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });
        jPanel4.add(btnNew);

        txtHeSoLuong.setFont(new java.awt.Font("Monospaced", 1, 14)); // NOI18N
        txtHeSoLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHeSoLuongActionPerformed(evt);
            }
        });

        jLabel14.setText("  Nghìn-Đồng");
        jLabel14.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 1, new java.awt.Color(153, 153, 153)));

        GioiTInh.add(rdoNam);
        rdoNam.setSelected(true);
        rdoNam.setText("Nam");

        GioiTInh.add(rdoNu);
        rdoNu.setText("Nữ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(rdoNam)
                .addGap(60, 60, 60)
                .addComponent(rdoNu)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoNam)
                    .addComponent(rdoNu)))
        );

        jLabel1.setText("Giới tính");

        TrangThai.add(rdoHoatDong);
        rdoHoatDong.setSelected(true);
        rdoHoatDong.setText("Hoạt động");

        TrangThai.add(rdoVoHieu);
        rdoVoHieu.setText("Vô hiệu");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(rdoHoatDong)
                .addGap(29, 29, 29)
                .addComponent(rdoVoHieu)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoHoatDong)
                    .addComponent(rdoVoHieu))
                .addContainerGap())
        );

        jLabel6.setText("Trạng thái");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel10)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(cboLoaiNV, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jLabel1))
                    .addComponent(txtMatKhau)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtMaNhanVien, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtTenNhanVien, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtDiaChi, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                        .addComponent(txtHeSoLuong)
                                        .addGap(0, 0, 0)
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel9)
                                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel11)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(354, 354, 354)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(30, 30, 30)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                    .addComponent(lblAnh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel2))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtMaNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                            .addComponent(txtHeSoLuong)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTenNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9)))
                    .addComponent(lblAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cboLoaiNV))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pnlScreenMain.add(jPanel5, "card3");

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        tbl_DanhSachNV.setAutoCreateRowSorter(true);
        tbl_DanhSachNV.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        tbl_DanhSachNV.setModel(new DefaultTableModel(
            new Object [][] {
                {"uONG", "SÚOAS", null, null, null, null, null},
                {"1", "SDAF", null, null, null, null, null},
                {"1ÁDF", "ÁD", null, null, null, null, null},
                {"1FAS", "SDF", null, null, null, null, null},
                {"D", "SDFA", null, null, null, null, null},
                {"FASDFA", "SDFA", null, null, null, null, null}
            },
            new String [] {
                "Mã ", "Tên", "Chức vụ", "SĐT", "Email", "Lương/giờ", "Địa chỉ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_DanhSachNV.setRowHeight(30);
        tbl_DanhSachNV.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_DanhSachNVMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_DanhSachNV);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlScreenMain.add(jPanel3, "card2");

        pnlMenu.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 2, new java.awt.Color(0, 0, 255)));
        pnlMenu.setPreferredSize(new java.awt.Dimension(263, 474));
        pnlMenu.setRequestFocusEnabled(false);

        lblTimE.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTimE.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTimE.setText("Mon, November 06, 2020 00:00:00");

        btnCapNhat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCapNhat.setText("Cập nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnDanhSachNhanVien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDanhSachNhanVien.setText("Danh sách nhân viên");
        btnDanhSachNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDanhSachNhanVienActionPerformed(evt);
            }
        });

        lblUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblTenNhanVien.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTenNhanVien.setText("Tên nhân viên");

        javax.swing.GroupLayout pnlMenuLayout = new javax.swing.GroupLayout(pnlMenu);
        pnlMenu.setLayout(pnlMenuLayout);
        pnlMenuLayout.setHorizontalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnCapNhat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnDanhSachNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblTimE, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblUser, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                    .addComponent(lblTenNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        pnlMenuLayout.setVerticalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTenNhanVien)
                .addGap(37, 37, 37)
                .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDanhSachNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(lblTimE, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlScreenMain, javax.swing.GroupLayout.PREFERRED_SIZE, 814, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlScreenMain, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(pnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboLoaiNVItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboLoaiNVItemStateChanged
        if (cboLoaiNV.getSelectedIndex() != 0 && cboLoaiNV.getSelectedIndex() != 1) {
            txtMatKhau.setEditable(false);
        } else {
            txtMatKhau.setEditable(true);
        }
        txtMatKhau.setText("");
    }//GEN-LAST:event_cboLoaiNVItemStateChanged

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        insert();
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnNewActionPerformed

    private void txtHeSoLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHeSoLuongActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHeSoLuongActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        String manv = txtTimKiem.getText();

        Employee nv = nhanVienDAO.selectByID(manv);
        if (nv == null) {
            MsgBox.notify("Không tìm thấy", this);
        } else {
            setForm(nv);
            cardlayout.show(pnlScreenMain, "card3");
        }

    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void tbl_DanhSachNVMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_DanhSachNVMouseClicked

        if (evt.getClickCount() == 2) {
            this.row = tbl_DanhSachNV.getSelectedRow();
            this.editForm();
            cardlayout.show(pnlScreenMain, "card3");
        }
    }//GEN-LAST:event_tbl_DanhSachNVMouseClicked

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        cardlayout.show(pnlScreenMain, "card3");
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnDanhSachNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDanhSachNhanVienActionPerformed
        cardlayout.show(pnlScreenMain, "card2");
    }//GEN-LAST:event_btnDanhSachNhanVienActionPerformed

    private void lblAnhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblAnhMouseClicked
        try {
            if (WindowChoose.openChoose()) {
                String nameFile = WindowChoose.nameFile;
                ImageHelper.copy(WindowChoose.path);
                lblAnh.setIcon(ImageHelper.getImage(nameFile, 143, 174));
                lblAnh.setToolTipText(nameFile);
            }
        } catch (Exception e) {
            MsgBox.notify(e.getMessage(), this);
        }
    }//GEN-LAST:event_lblAnhMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup GioiTInh;
    private javax.swing.ButtonGroup TrangThai;
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnDanhSachNhanVien;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cboLoaiNV;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAnh;
    private javax.swing.JLabel lblTenNhanVien;
    private javax.swing.JLabel lblTimE;
    private javax.swing.JLabel lblUser;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlScreenMain;
    private javax.swing.JRadioButton rdoHoatDong;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JRadioButton rdoVoHieu;
    private javax.swing.JTable tbl_DanhSachNV;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHeSoLuong;
    private javax.swing.JTextField txtMaNhanVien;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTenNhanVien;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private String emailRecently;
    private String phoneRecently;

    public void fillTable() {

        model.setRowCount(0);
        try {

            for (Employee nv : nhanVienDAO.selectAll()) {
                Object[] row = {
                    nv.getMaNhanVien(),
                    nv.getTenNhanVien(),
                    nv.getLoaiNhanVien(),
                    nv.getSdt(),
                    nv.getEmail(),
                    nv.getHeSoLuong(),
                    nv.getDiaChi(),
                    nv.isTrangThai()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.notify("Lỗi FillTable", this);
        }
    }

    void setForm(Employee nv) {
        emailRecently = nv.getEmail();
        phoneRecently = nv.getSdt();
        txtMaNhanVien.setText(nv.getMaNhanVien());
        cboLoaiNV.setSelectedItem(nv.getLoaiNhanVien());
        txtTenNhanVien.setText(nv.getTenNhanVien());
        rdoNam.setSelected(nv.isGioiTinh());
        rdoNu.setSelected(!nv.isGioiTinh());
        txtDiaChi.setText(nv.getDiaChi());
        txtNgaySinh.setText(LocalVietNam.getDate(nv.getNgaySinh()));
        txtSDT.setText(nv.getSdt());
        txtEmail.setText(nv.getEmail());
        txtHeSoLuong.setText(nv.getHeSoLuong() + "");
        txtMatKhau.setText(nv.getMatKhau());
        lblAnh.setIcon(ImageHelper.getImage(nv.getHinh(), 142, 175));
        lblAnh.setToolTipText(nv.getHinh());
        rdoHoatDong.setSelected(nv.isTrangThai());
        rdoVoHieu.setSelected(!nv.isTrangThai());
    }

    public Employee getForm() {
        Employee nv = new Employee();
        nv.setMaNhanVien(txtMaNhanVien.getText());
        nv.setTenNhanVien(txtTenNhanVien.getText());
        nv.setLoaiNhanVien((String) cboLoaiNV.getSelectedItem());
        nv.setGioiTinh(rdoNam.isSelected());
        nv.setDiaChi(txtDiaChi.getText());
        nv.setSdt(txtSDT.getText());
        nv.setEmail(txtEmail.getText());
        nv.setHeSoLuong(Integer.parseInt(txtHeSoLuong.getText()));
        nv.setMatKhau(txtMatKhau.getText());
        nv.setHinh(lblAnh.getToolTipText());
        nv.setNgaySinh(date);
        nv.setTrangThai(rdoHoatDong.isSelected());
        return nv;
    }

    void clearForm() {
        Employee nv = new Employee();
        this.setForm(nv);
    }

    void editForm() {
        String maNv = (String) tbl_DanhSachNV.getValueAt(this.row, 0);
        Employee nv = nhanVienDAO.selectByID(maNv);
        this.setForm(nv);
    }

    void insert() {
        if (isExist(txtMaNhanVien.getText())) {
            MsgBox.notify("Mã nhân viên đã tồn tại!", this);
            return;
        }

        if (isError()) {
            return;
        }

        if (isExistEmail(txtEmail.getText())) {
            MsgBox.notify("Email này đã có người sử dụng", this);
            return;
        }

        if (isExistPhone(txtSDT.getText())) {
            MsgBox.notify("Số điện thoại này đã có người sử dụng", this);
            return;
        }
        try {
            Employee nv = getForm();
            nhanVienDAO.insert(nv);
            this.fillTable();
            MsgBox.notify("Thêm nhân viên thành công", this);
            this.clearForm();
        } catch (Exception e) {
            e.printStackTrace();
            MsgBox.notify("Lỗi thêm nhân viên", this);
        }
    }

    void update() {
        if (!isExist(txtMaNhanVien.getText())) {
            MsgBox.notify("Mã nhân viên chưa tồn tại!", this);
            return;
        }

        if (isError()) {
            return;
        }

        if (!txtEmail.getText().equalsIgnoreCase(emailRecently)) {
            if (isExistEmail(txtEmail.getText())) {
                MsgBox.notify("Email này đã đăng ký", this);
                return;
            }
        }

        if (!txtSDT.getText().equalsIgnoreCase(phoneRecently)) {
            if (isExistPhone(txtSDT.getText())) {
                MsgBox.notify("Số điện thoại này đã đăng ký", this);
                return;
            }
        }

        try {
            Employee nv = getForm();
            nhanVienDAO.update(nv);
            this.fillTable();
            MsgBox.notify("Sửa nhân viên thành công", this);
        } catch (Exception e) {
            MsgBox.notify("Lỗi sửa nhân viên", this);
        }
    }

    void delete() {
        String maNv = txtMaNhanVien.getText();
        if (maNv.equals(Auth.user.getMaNhanVien())) {
            MsgBox.notify("Bạn không được xóa chính bạn", this);
        } else if (MsgBox.confirm("Bạn muốn xóa nhân viên này?", this)) {
            try {
                nhanVienDAO.delete(maNv);
                this.fillTable();
                MsgBox.notify("Xóa nhân viên thành công", this);
                this.clearForm();
            } catch (Exception e) {
                MsgBox.notify("Lỗi xóa nhân viên", this);
            }
        }
    }

    private boolean isError() {
        if (isEmpty(txtMaNhanVien.getText())
                || isEmpty(txtTenNhanVien.getText())
                || isEmpty(txtDiaChi.getText())
                || isEmpty(txtHeSoLuong.getText())
                || isEmpty(txtSDT.getText())
                || isEmpty(txtNgaySinh.getText())) {
            MsgBox.notify("Chưa nhập đủ thông tin", this);
            return true;
        }
        if (checkNv()) {
            MsgBox.notify("Mật khẩu chưa đủ 8 ký tự", this);
            return true;
        }
        if (lblAnh.getToolTipText() == null) {
            MsgBox.notify("Chưa chọn ảnh", this);
            return true;
        }
        if (!isNumber(txtHeSoLuong.getText())) {
            MsgBox.notify("Hệ số lương phải là số", this);
            return true;
        }
        String checkEmail = "[a-z]+\\w+@[a-z]+(\\.[a-z]+){1,2}";
        if (!txtEmail.getText().matches(checkEmail)) {
            MsgBox.notify("vui lòng nhập đúng định dạng email", this);
            txtEmail.requestFocus();
            return true;
        }
        String checkSDT = "(0|\\+84)\\d{9}";
        if (!txtSDT.getText().matches(checkSDT)) {
            MsgBox.notify("vui lòng nhập đúng định dạng SĐT", this);
            txtEmail.requestFocus();
            return true;
        }
        if (!isDate()) {
            MsgBox.notify("vui lòng nhập đúng định dạng dd-MM-yyyy", this);
            txtEmail.requestFocus();
            return true;
        }

        return false;
    }
    Date date;

    public boolean isDate() {
        SimpleDateFormat formater = new SimpleDateFormat("dd-MM-yyyy");
        try {
            date = DateUtils.convertDateToSqlDate(formater.parse(txtNgaySinh.getText()));
            return true;
        } catch (Exception e) {
            MsgBox.notify("Không đúng định dạng ngày tháng", this);
            return false;
        }
    }

    private boolean isEmpty(String text) {
        return text.isEmpty();
    }

    private boolean isNumber(String text) {
        try {
            Integer.parseInt(text);
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    private boolean isExist(String maNv) {
        Employee nv = nhanVienDAO.selectByID(maNv);
        if (nv == null) {
            return false;
        }
        return true;
    }

    private boolean checkNv() {
        if (cboLoaiNV.getSelectedIndex() < 2) {
            if (txtMatKhau.getText().length() < 8) {
                return true;
            }
        }
        return false;
    }

    private boolean isExistEmail(String email) {
        Employee nv = nhanVienDAO.selectByEmail(email);
        return nv != null;
    }

    private boolean isExistPhone(String phone) {
        Employee nv = nhanVienDAO.selectByPhone(phone);
        return nv != null;
    }
}
