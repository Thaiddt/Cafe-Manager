/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cafeteria.view;

import cafeteria.dao.CategoryDAO;
import cafeteria.dao.ProductDAO;
import cafeteria.entity.Category;
import cafeteria.entity.Product;
import cafeteria.utils.*;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JLabel;
import javax.swing.JPanel;

public class ProductManagementView extends javax.swing.JInternalFrame {

    /**
     * Creates new form QuanLySanPham
     */
    private CardLayout cardlayout;
    private ProductDAO sanPhamDAO;
    private CategoryDAO loaiSanPhamDAO;

    DefaultComboBoxModel<Category> comboBoxLoai;

    public ProductManagementView() {
        initComponents();
        cardlayout = (CardLayout) pnlScreenMain.getLayout();
        lblTenUser.setText(Auth.user.getTenNhanVien());
        lblAnhUser.setIcon(ImageHelper.getImage(Auth.user.getHinh(), 184, 177));
        OclockHelper.startOclock(lblTIme);
        init();
        OclockHelper.startOclock(lblTIme);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMenun = new JPanel();
        lblTIme = new JLabel();
        btnCapNhat = new javax.swing.JButton();
        btnDanhSachNhanVien = new javax.swing.JButton();
        lblAnhUser = new JLabel();
        lblTenUser = new JLabel();
        pnlScreenMain = new JPanel();
        pnlChiTiet = new JPanel();
        lblHinhAnh = new JLabel();
        jLabel2 = new JLabel();
        txtMaSanPham = new javax.swing.JTextField();
        txtTenSanPham = new javax.swing.JTextField();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        txtDonGia = new javax.swing.JTextField();
        jLabel5 = new JLabel();
        cbxLoai = new javax.swing.JComboBox<>();
        jLabel7 = new JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        jPanel6 = new JPanel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel8 = new JLabel();
        pnlDanhSach = new JPanel();
        txtTimKiem = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnlSanPham = new JPanel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new Color(0, 0, 255), 2));
        setClosable(true);
        setTitle("Quản lý sản phẩm");

        pnlMenun.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 2, new Color(0, 0, 255)));
        pnlMenun.setPreferredSize(new Dimension(263, 474));

        lblTIme.setFont(new Font("Tahoma", 0, 14)); // NOI18N
        lblTIme.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTIme.setText("Mon, November 06, 2020 00:00:00");

        btnCapNhat.setFont(new Font("Tahoma", 0, 14)); // NOI18N
        btnCapNhat.setText("Cập nhật");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        btnDanhSachNhanVien.setFont(new Font("Tahoma", 0, 14)); // NOI18N
        btnDanhSachNhanVien.setText("Danh sách sản phẩm");
        btnDanhSachNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDanhSachNhanVienActionPerformed(evt);
            }
        });

        lblAnhUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAnhUser.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(0, 0, 0)));

        lblTenUser.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTenUser.setText("Tên nhân viên");

        javax.swing.GroupLayout pnlMenunLayout = new javax.swing.GroupLayout(pnlMenun);
        pnlMenun.setLayout(pnlMenunLayout);
        pnlMenunLayout.setHorizontalGroup(
            pnlMenunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnCapNhat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnDanhSachNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblTIme, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlMenunLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(pnlMenunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblAnhUser, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
                    .addComponent(lblTenUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        pnlMenunLayout.setVerticalGroup(
            pnlMenunLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenunLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(lblAnhUser, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTenUser)
                .addGap(37, 37, 37)
                .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDanhSachNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(lblTIme, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlScreenMain.setLayout(new CardLayout());

        pnlChiTiet.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(0, 0, 0)));

        lblHinhAnh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHinhAnh.setBorder(javax.swing.BorderFactory.createLineBorder(new Color(0, 0, 0)));
        lblHinhAnh.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                lblHinhAnhMouseClicked(evt);
            }
        });

        jLabel2.setFont(new Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Mã sản phẩm");

        txtMaSanPham.setFont(new Font("Monospaced", 1, 14)); // NOI18N

        txtTenSanPham.setFont(new Font("Monospaced", 1, 14)); // NOI18N

        jLabel3.setFont(new Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Tên sản phẩm");

        jLabel4.setText("Giá");

        txtDonGia.setFont(new Font("Monospaced", 1, 14)); // NOI18N

        jLabel5.setFont(new Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Loại");

        cbxLoai.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        cbxLoai.setModel(new DefaultComboBoxModel<>(new String[] { "Đồ ăn", "Đồ uống" }));

        jLabel7.setFont(new Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Mô tả");

        txtMoTa.setColumns(20);
        txtMoTa.setFont(new Font("Monospaced", 1, 14)); // NOI18N
        txtMoTa.setLineWrap(true);
        txtMoTa.setRows(5);
        txtMoTa.setWrapStyleWord(true);
        jScrollPane2.setViewportView(txtMoTa);

        jPanel6.setLayout(new java.awt.GridLayout(2, 2, 10, 10));

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel6.add(btnThem);

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel6.add(btnSua);

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel6.add(btnXoa);

        btnClear.setText("Làm mới");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel6.add(btnClear);

        jLabel8.setText("  Nghìn-Đồng");
        jLabel8.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 1, new Color(153, 153, 153)));

        javax.swing.GroupLayout pnlChiTietLayout = new javax.swing.GroupLayout(pnlChiTiet);
        pnlChiTiet.setLayout(pnlChiTietLayout);
        pnlChiTietLayout.setHorizontalGroup(
            pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChiTietLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlChiTietLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlChiTietLayout.createSequentialGroup()
                        .addGroup(pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2)
                            .addComponent(txtMaSanPham, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxLoai, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlChiTietLayout.createSequentialGroup()
                                .addGroup(pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnlChiTietLayout.createSequentialGroup()
                                .addGroup(pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(pnlChiTietLayout.createSequentialGroup()
                                        .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, 0)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)))))
                        .addGap(30, 30, 30)
                        .addGroup(pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 273, Short.MAX_VALUE)
                            .addComponent(lblHinhAnh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20))))
        );
        pnlChiTietLayout.setVerticalGroup(
            pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlChiTietLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addGap(6, 6, 6)
                .addGroup(pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlChiTietLayout.createSequentialGroup()
                        .addComponent(txtMaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addGroup(pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(6, 6, 6)
                        .addGroup(pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDonGia)
                            .addComponent(txtTenSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                        .addGap(15, 15, 15)
                        .addComponent(jLabel5)
                        .addGap(6, 6, 6)
                        .addComponent(cbxLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblHinhAnh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))
                .addContainerGap())
        );

        pnlScreenMain.add(pnlChiTiet, "card3");

        txtTimKiem.setFont(new Font("Tahoma", 0, 18)); // NOI18N
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        pnlSanPham.setPreferredSize(new Dimension(787, 600));
        pnlSanPham.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 20, 20));
        jScrollPane1.setViewportView(pnlSanPham);

        javax.swing.GroupLayout pnlDanhSachLayout = new javax.swing.GroupLayout(pnlDanhSach);
        pnlDanhSach.setLayout(pnlDanhSachLayout);
        pnlDanhSachLayout.setHorizontalGroup(
            pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhSachLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlDanhSachLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        pnlDanhSachLayout.setVerticalGroup(
            pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDanhSachLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlDanhSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlDanhSachLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(402, Short.MAX_VALUE)))
        );

        pnlScreenMain.add(pnlDanhSach, "card2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(pnlMenun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlScreenMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMenun, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
            .addComponent(pnlScreenMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        insert();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        update();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearForm();
    }//GEN-LAST:event_btnClearActionPerformed

    private void lblHinhAnhMouseClicked(MouseEvent evt) {//GEN-FIRST:event_lblHinhAnhMouseClicked
        try {
            if (WindowChoose.openChoose()) {
                String nameFile = WindowChoose.nameFile;
                ImageHelper.copy(WindowChoose.path);
                lblHinhAnh.setToolTipText(nameFile);
                lblHinhAnh.setIcon(ImageHelper.getImage(nameFile, 273, 186));
            }
        } catch (Exception e) {
            MsgBox.notify("Chọn ảnh lỗi", this);
        }
    }//GEN-LAST:event_lblHinhAnhMouseClicked

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        fillToBoard();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
        cardlayout.show(pnlScreenMain, "card3");
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnDanhSachNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDanhSachNhanVienActionPerformed
        cardlayout.show(pnlScreenMain, "card2");
    }//GEN-LAST:event_btnDanhSachNhanVienActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDanhSachNhanVien;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbxLoai;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JLabel jLabel7;
    private JLabel jLabel8;
    private JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private JLabel lblAnhUser;
    private JLabel lblHinhAnh;
    private JLabel lblTIme;
    private JLabel lblTenUser;
    private JPanel pnlChiTiet;
    private JPanel pnlDanhSach;
    private JPanel pnlMenun;
    private JPanel pnlSanPham;
    private JPanel pnlScreenMain;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtMaSanPham;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JTextField txtTenSanPham;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void init() {
        sanPhamDAO = new ProductDAO();
        loaiSanPhamDAO = new CategoryDAO();

        comboBoxLoai = (DefaultComboBoxModel) cbxLoai.getModel();

        fillLoaiSanPham();
        fillToBoard();
    }

    private void fillLoaiSanPham() {
        comboBoxLoai.removeAllElements();
        loaiSanPhamDAO.selectAll().forEach((x) -> {
            comboBoxLoai.addElement(x);
        });
    }

    private void fillToBoard() {
        deleteBoard(pnlSanPham);
        List<Product> sanPhamList = sanPhamDAO.selectByTen(txtTimKiem.getText());
        deleteBoard(pnlSanPham);
        double row = (double) sanPhamList.size() / 4;
        int heightBoard = (int) (Math.ceil(row) * 176 + (row * 25)); // chieu dai cua bang chua san pham
        pnlSanPham.setPreferredSize(new Dimension(787, heightBoard)); // SET kich thuoc cho bang san pham

        sanPhamList.forEach((x) -> {
            createBoard(x);
        });
    }

    private void createBoard(Product sp) {
        JPanel board = new JPanel(null);
        Dimension size = new Dimension(176, 170);
        board.setPreferredSize(size);
        board.setSize(size);

        board.add(createName(sp.getTenSanPham()));
        board.add(createCost(sp.getDonGia()));
        board.add(createImage(sp.getHinhAnh()));

        board.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                setForm(sp);
                btnThem.setEnabled(false);
                txtMaSanPham.setEditable(false);
                cardlayout.show(pnlScreenMain, "card3");
            }
        });

        board.setCursor(new Cursor(Cursor.HAND_CURSOR));

        pnlSanPham.add(board);
    }

    private JLabel createName(String name) {
        JLabel lblName = new JLabel(name);
        lblName.setFont(new Font("monospaced", Font.BOLD, 14));
        lblName.setBounds(1, 140, 176, 30);
        lblName.setHorizontalAlignment(JLabel.CENTER);
        lblName.setBackground(Color.white);
        lblName.setOpaque(true);

        return lblName;
    }

    private JLabel createImage(String pathImage) {
        JLabel lblImage = new JLabel();
        lblImage.setBounds(0, 0, 176, 140);
        lblImage.setIcon(ImageHelper.getImage(pathImage, lblImage.getWidth(), lblImage.getHeight()));
        return lblImage;
    }

    private JLabel createCost(int cost) {
        JLabel lblcost = new JLabel(cost + "K");
        lblcost.setForeground(Color.WHITE);
        lblcost.setFont(new Font("tahoma", Font.BOLD, 14));
        lblcost.setHorizontalAlignment(JLabel.CENTER);
        lblcost.setBounds(146, 0, 30, 30);
        lblcost.setBackground(Color.GREEN);
        lblcost.setOpaque(true);

        return lblcost;
    }

    private void deleteBoard(JPanel sanPhamBoard) {
        sanPhamBoard.removeAll();
        sanPhamBoard.revalidate();
        sanPhamBoard.repaint();
    }

    private void setForm(Product sanPham) {
        txtMaSanPham.setText(sanPham.getMaSanPham());
        txtTenSanPham.setText(sanPham.getTenSanPham());
        txtDonGia.setText(sanPham.getDonGia() + "");
        txtMoTa.setText(sanPham.getMoTa());
        lblHinhAnh.setIcon(ImageHelper.getImage(sanPham.getHinhAnh(), 273, 186));
        lblHinhAnh.setToolTipText(sanPham.getHinhAnh());
    }

    private void insert() {
        if (isError()) {
            return;
        }
        if (isExist(txtMaSanPham.getText())) {
            MsgBox.notify("Mã sản phẩm đã tồn tại", this);
            return;
        }

        try {
            Product sp = getForm();
            sanPhamDAO.insert(sp);
            MsgBox.notify("Thêm thành công", this);
            fillToBoard();
            clearForm();
        } catch (Exception e) {
            MsgBox.notify(e.getMessage(),this);
        }
    }

    private void update() {
        if (isError()) {
            return;
        }
        try {
            Product sp = getForm();
            sanPhamDAO.update(sp);
            MsgBox.notify("Sửa thành công", this);
            fillToBoard();
            clearForm();
        } catch (Exception e) {
            MsgBox.notify(e.getMessage(), this);
        }
    }

    private void delete() {
        if (!MsgBox.confirm("Bạn có muốn xóa " + txtTenSanPham.getText() + " không?", this)) {
            return;
        }
        try {
            sanPhamDAO.delete(txtMaSanPham.getText());
            ImageHelper.delete(lblHinhAnh.getToolTipText());
            MsgBox.notify("XÓa thành công", this);
            fillToBoard();
            clearForm();
        } catch (Exception e) {
            MsgBox.notify(e.getMessage(), this);
        }
    }

    private Product getForm() {
        Product sp = new Product();
        sp.setDonGia(Integer.parseInt(txtDonGia.getText()));
        sp.setHinhAnh(lblHinhAnh.getToolTipText());
        sp.setMaLoaiSanPham(((Category) comboBoxLoai.getSelectedItem()).getMaLoaiSanPham());
        sp.setMoTa(txtMoTa.getText());
        sp.setMaSanPham(txtMaSanPham.getText());
        sp.setTenSanPham(txtTenSanPham.getText());
        return sp;
    }

    private void clearForm() {
        btnThem.setEnabled(true);
        txtMaSanPham.setEditable(true);
        Product a = new Product();
        setForm(a);
    }

    private boolean isError() {
        if (isEmpty(txtMaSanPham.getText())
            || isEmpty(txtTenSanPham.getText())
            || isEmpty(txtMoTa.getText())
            || isEmpty(txtDonGia.getText())) {
            MsgBox.notify("Nhập đủ thông tin", this);
            return true;
        }
        if (lblHinhAnh.getToolTipText() == null) {
            MsgBox.notify("Chưa chọn ảnh", this);
            return true;
        }
        if (!isNumber(txtDonGia.getText())) {
            MsgBox.notify("Don gia phai la so", this);
            return true;
        }

        return false;

    }

    private boolean isExist(String maSp) {
        return sanPhamDAO.selectByID(maSp) != null;
    }

    private boolean isEmpty(String text) {
        return text.isEmpty();
    }

    private boolean isNumber(String text) {
        try {
            Integer.parseInt(text);
            return true;
        } catch (Exception e) {
            return false;
        }
    }
}
