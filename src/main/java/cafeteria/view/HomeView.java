/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cafeteria.view;

import cafeteria.dao.CategoryDAO;
import cafeteria.dao.ProductDAO;
import cafeteria.entity.Category;
import cafeteria.entity.Product;
import cafeteria.exception.FormatVietNamException;
import cafeteria.utils.Auth;
import cafeteria.utils.ImageHelper;
import cafeteria.utils.LocalVietNam;
import cafeteria.utils.MsgBox;

import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

public class HomeView extends javax.swing.JFrame {

    private CardLayout cardlayout;

    private DefaultTableModel tableThanhToan;
    private DefaultComboBoxModel comboboxLoai;

    private CategoryDAO loaiSanPhamDAO;
    private ProductDAO sanPhamDAO;

    public HomeView() {
        initComponents();
        cardlayout = (CardLayout) pnlScreenMain.getLayout();
        setLocationRelativeTo(null);
        setIconImage(new ImageIcon(getClass().getResource("/images/system/chef.png")).getImage());
        initialization();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktop = new javax.swing.JDesktopPane();
        pnlMenu = new JPanel();
        btnOrder = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        btnSanPham = new javax.swing.JButton();
        btnNhanVien = new javax.swing.JButton();
        btnLoaiSanPham = new javax.swing.JButton();
        btnLuong = new javax.swing.JButton();
        btnHoaDon = new javax.swing.JButton();
        btnDoiMatKhau = new javax.swing.JButton();
        btnThongKe = new javax.swing.JButton();
        pnlScreenMain = new JPanel();
        pnlHome = new JPanel();
        btnDangXuat = new javax.swing.JButton();
        lblMenu = new JLabel();
        pnlOrder = new JPanel();
        pnlSanPham = new JPanel();
        jPanel12 = new JPanel();
        cbxLoaiSanPham2 = new javax.swing.JComboBox<>();
        txtTimKiem = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel13 = new JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        SanPhamBoard = new JPanel();
        pnlThanhToan = new JPanel();
        jLabel2 = new JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatHang = new javax.swing.JTable();
        btnThanhToan = new javax.swing.JButton();
        jPanel4 = new JPanel();
        jLabel6 = new JLabel();
        lblTongTien = new JLabel();
        btnLamMoi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        setSize(new Dimension(1250, 705));

        desktop.setPreferredSize(new Dimension(1250, 705));

        pnlMenu.setBackground(new Color(59, 175, 218));
        pnlMenu.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 0, 2, new Color(255, 255, 255)));

        btnOrder.setBackground(new Color(59, 175, 218));
        btnOrder.setFont(new Font("Tahoma", 0, 18)); // NOI18N
        btnOrder.setForeground(new Color(255, 255, 255));
        btnOrder.setIcon(new ImageIcon(getClass().getResource("/images/system/order.png"))); // NOI18N
        btnOrder.setText("Order");
        btnOrder.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(255, 255, 255)));
        btnOrder.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnOrder.setFocusPainted(false);
        btnOrder.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnOrder.setPreferredSize(new Dimension(87, 33));
        btnOrder.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });

        btnHome.setBackground(new Color(59, 175, 218));
        btnHome.setFont(new Font("Tahoma", 0, 18)); // NOI18N
        btnHome.setForeground(new Color(255, 255, 255));
        btnHome.setIcon(new ImageIcon(getClass().getResource("/images/system/home.png"))); // NOI18N
        btnHome.setText("Home");
        btnHome.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(255, 255, 255)));
        btnHome.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnHome.setFocusPainted(false);
        btnHome.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHome.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnSanPham.setBackground(new Color(59, 175, 218));
        btnSanPham.setFont(new Font("Tahoma", 0, 18)); // NOI18N
        btnSanPham.setForeground(new Color(255, 255, 255));
        btnSanPham.setIcon(new ImageIcon(getClass().getResource("/images/system/product.png"))); // NOI18N
        btnSanPham.setText("Sản phẩm");
        btnSanPham.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(255, 255, 255)));
        btnSanPham.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnSanPham.setFocusPainted(false);
        btnSanPham.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSanPham.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSanPhamActionPerformed(evt);
            }
        });

        btnNhanVien.setBackground(new Color(59, 175, 218));
        btnNhanVien.setFont(new Font("Tahoma", 0, 18)); // NOI18N
        btnNhanVien.setForeground(new Color(255, 255, 255));
        btnNhanVien.setIcon(new ImageIcon(getClass().getResource("/images/system/employee.png"))); // NOI18N
        btnNhanVien.setText("Nhân viên");
        btnNhanVien.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(255, 255, 255)));
        btnNhanVien.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnNhanVien.setFocusPainted(false);
        btnNhanVien.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNhanVien.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhanVienActionPerformed(evt);
            }
        });

        btnLoaiSanPham.setBackground(new Color(59, 175, 218));
        btnLoaiSanPham.setFont(new Font("Tahoma", 0, 18)); // NOI18N
        btnLoaiSanPham.setForeground(new Color(255, 255, 255));
        btnLoaiSanPham.setIcon(new ImageIcon(getClass().getResource("/images/system/type.png"))); // NOI18N
        btnLoaiSanPham.setText("Loại sản phẩm");
        btnLoaiSanPham.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(255, 255, 255)));
        btnLoaiSanPham.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnLoaiSanPham.setFocusPainted(false);
        btnLoaiSanPham.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLoaiSanPham.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLoaiSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoaiSanPhamActionPerformed(evt);
            }
        });

        btnLuong.setBackground(new Color(59, 175, 218));
        btnLuong.setFont(new Font("Tahoma", 0, 18)); // NOI18N
        btnLuong.setForeground(new Color(255, 255, 255));
        btnLuong.setIcon(new ImageIcon(getClass().getResource("/images/system/salary.png"))); // NOI18N
        btnLuong.setText("Lương");
        btnLuong.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(255, 255, 255)));
        btnLuong.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnLuong.setFocusPainted(false);
        btnLuong.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLuong.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuongActionPerformed(evt);
            }
        });

        btnHoaDon.setBackground(new Color(59, 175, 218));
        btnHoaDon.setFont(new Font("Tahoma", 0, 18)); // NOI18N
        btnHoaDon.setForeground(new Color(255, 255, 255));
        btnHoaDon.setIcon(new ImageIcon(getClass().getResource("/images/system/receipt.png"))); // NOI18N
        btnHoaDon.setText("Hoá đơn");
        btnHoaDon.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(255, 255, 255)));
        btnHoaDon.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnHoaDon.setFocusPainted(false);
        btnHoaDon.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHoaDon.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHoaDonActionPerformed(evt);
            }
        });

        btnDoiMatKhau.setBackground(new Color(59, 175, 218));
        btnDoiMatKhau.setFont(new Font("Tahoma", 0, 18)); // NOI18N
        btnDoiMatKhau.setForeground(new Color(255, 255, 255));
        btnDoiMatKhau.setIcon(new ImageIcon(getClass().getResource("/images/system/changepass.png"))); // NOI18N
        btnDoiMatKhau.setText("Đổi mật khẩu");
        btnDoiMatKhau.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(255, 255, 255)));
        btnDoiMatKhau.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnDoiMatKhau.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDoiMatKhau.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDoiMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoiMatKhauActionPerformed(evt);
            }
        });

        btnThongKe.setBackground(new Color(59, 175, 218));
        btnThongKe.setFont(new Font("Tahoma", 0, 18)); // NOI18N
        btnThongKe.setForeground(new Color(255, 255, 255));
        btnThongKe.setIcon(new ImageIcon(getClass().getResource("/images/system/total.png"))); // NOI18N
        btnThongKe.setText("Thống kê");
        btnThongKe.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnThongKe.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnThongKe.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnThongKe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThongKeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMenuLayout = new javax.swing.GroupLayout(pnlMenu);
        pnlMenu.setLayout(pnlMenuLayout);
        pnlMenuLayout.setHorizontalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnLuong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btnThongKe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLoaiSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDoiMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnHome, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                        .addComponent(btnOrder, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                        .addComponent(btnNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlMenuLayout.setVerticalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnLoaiSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnDoiMatKhau)
                .addGap(0, 0, 0)
                .addComponent(btnThongKe)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlMenuLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDoiMatKhau, btnLoaiSanPham, btnThongKe});

        pnlScreenMain.setLayout(new CardLayout());

        pnlHome.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnDangXuat.setBackground(new Color(255, 51, 51));
        btnDangXuat.setFont(new Font("Tahoma", 1, 14)); // NOI18N
        btnDangXuat.setForeground(new Color(255, 255, 255));
        btnDangXuat.setText("Đăng xuất");
        btnDangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangXuatActionPerformed(evt);
            }
        });
        pnlHome.add(btnDangXuat, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 700, 114, 40));

        lblMenu.setIcon(new ImageIcon(getClass().getResource("/images/product/menu.png")));
        pnlHome.add(lblMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 760));

        pnlScreenMain.add(pnlHome, "card2");

        jPanel12.setBackground(new Color(59, 175, 218));

        cbxLoaiSanPham2.setFont(new Font("Tahoma", 0, 14)); // NOI18N
        cbxLoaiSanPham2.setModel(new DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        cbxLoaiSanPham2.setCursor(new Cursor(Cursor.HAND_CURSOR));
        cbxLoaiSanPham2.setPreferredSize(new Dimension(82, 30));
        cbxLoaiSanPham2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxLoaiSanPham2ItemStateChanged(evt);
            }
        });

        txtTimKiem.setMargin(new java.awt.Insets(2, 10, 2, 2));
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jButton1.setBackground(new Color(59, 175, 218));
        jButton1.setIcon(new ImageIcon(getClass().getResource("/images/system/reload.png"))); // NOI18N
        jButton1.setRequestFocusEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(cbxLoaiSanPham2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel12Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(cbxLoaiSanPham2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel13.setBackground(new Color(255, 255, 255));

        jScrollPane2.setBackground(new Color(255, 255, 255));
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        SanPhamBoard.setBackground(new Color(255, 255, 255));
        SanPhamBoard.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 20, 20));
        jScrollPane2.setViewportView(SanPhamBoard);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlSanPhamLayout = new javax.swing.GroupLayout(pnlSanPham);
        pnlSanPham.setLayout(pnlSanPhamLayout);
        pnlSanPhamLayout.setHorizontalGroup(
            pnlSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlSanPhamLayout.setVerticalGroup(
            pnlSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSanPhamLayout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pnlThanhToan.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 2, 0, 0, new Color(255, 255, 255)));

        jLabel2.setBackground(new Color(59, 175, 218));
        jLabel2.setFont(new Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setForeground(new Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Đặt hàng");
        jLabel2.setOpaque(true);
        jLabel2.setPreferredSize(new Dimension(100, 28));

        tblDatHang.setFont(new Font("Tahoma", 0, 14)); // NOI18N
        tblDatHang.setModel(new DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "Tên", "Số lượng", "Giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDatHang.setCursor(new Cursor(Cursor.HAND_CURSOR));
        tblDatHang.setRequestFocusEnabled(false);
        tblDatHang.setRowHeight(35);
        tblDatHang.getTableHeader().setReorderingAllowed(false);
        tblDatHang.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                tblDatHangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDatHang);
        if (tblDatHang.getColumnModel().getColumnCount() > 0) {
            tblDatHang.getColumnModel().getColumn(0).setMinWidth(0);
            tblDatHang.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblDatHang.getColumnModel().getColumn(0).setMaxWidth(0);
            tblDatHang.getColumnModel().getColumn(1).setMaxWidth(200);
            tblDatHang.getColumnModel().getColumn(2).setMaxWidth(80);
            tblDatHang.getColumnModel().getColumn(3).setMaxWidth(150);
        }

        btnThanhToan.setBackground(new Color(102, 255, 51));
        btnThanhToan.setFont(new Font("Tahoma", 0, 22)); // NOI18N
        btnThanhToan.setForeground(new Color(255, 255, 255));
        btnThanhToan.setText("Thanh toán");
        btnThanhToan.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 1, 0, new Color(153, 153, 153)));

        jLabel6.setFont(new Font("Tahoma", 0, 19)); // NOI18N
        jLabel6.setText("Tổng tiền");

        lblTongTien.setFont(new Font("Tahoma", 0, 24)); // NOI18N
        lblTongTien.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTongTien.setText("0");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(101, 101, 101)
                .addComponent(lblTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTongTien)
                    .addComponent(jLabel6))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        btnLamMoi.setBackground(new Color(255, 0, 51));
        btnLamMoi.setFont(new Font("Tahoma", 0, 22)); // NOI18N
        btnLamMoi.setForeground(new Color(255, 255, 255));
        btnLamMoi.setText("Làm mới");
        btnLamMoi.setCursor(new Cursor(Cursor.HAND_CURSOR));
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlThanhToanLayout = new javax.swing.GroupLayout(pnlThanhToan);
        pnlThanhToan.setLayout(pnlThanhToanLayout);
        pnlThanhToanLayout.setHorizontalGroup(
            pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlThanhToanLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLamMoi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 351, Short.MAX_VALUE))
        );
        pnlThanhToanLayout.setVerticalGroup(
            pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlThanhToanLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118)
                .addGroup(pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(pnlThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlThanhToanLayout.createSequentialGroup()
                    .addGap(92, 92, 92)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(230, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout pnlOrderLayout = new javax.swing.GroupLayout(pnlOrder);
        pnlOrder.setLayout(pnlOrderLayout);
        pnlOrderLayout.setHorizontalGroup(
            pnlOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOrderLayout.createSequentialGroup()
                .addComponent(pnlSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlOrderLayout.setVerticalGroup(
            pnlOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOrderLayout.createSequentialGroup()
                .addGroup(pnlOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlScreenMain.add(pnlOrder, "card3");

        desktop.setLayer(pnlMenu, javax.swing.JLayeredPane.DEFAULT_LAYER);
        desktop.setLayer(pnlScreenMain, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout desktopLayout = new javax.swing.GroupLayout(desktop);
        desktop.setLayout(desktopLayout);
        desktopLayout.setHorizontalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(desktopLayout.createSequentialGroup()
                .addComponent(pnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlScreenMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        desktopLayout.setVerticalGroup(
            desktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlScreenMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktop, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        cardlayout.show(pnlScreenMain, "card3");
    }//GEN-LAST:event_btnOrderActionPerformed

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        cardlayout.show(pnlScreenMain, "card2");
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSanPhamActionPerformed
        if (!isAccess()) {
            return;
        }
        showForm(new ProductManagementView());
    }//GEN-LAST:event_btnSanPhamActionPerformed

    private void btnNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhanVienActionPerformed
        if (!isAccess()) {
            return;
        }
        showForm(new EmployeeManagementView());
    }//GEN-LAST:event_btnNhanVienActionPerformed

    private void btnLoaiSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoaiSanPhamActionPerformed
        if (!isAccess()) {
            return;
        }
        showForm(new CategoryMangementView());
    }//GEN-LAST:event_btnLoaiSanPhamActionPerformed

    private void btnLuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuongActionPerformed
        showForm(new SalaryManagementView());
    }//GEN-LAST:event_btnLuongActionPerformed

    private void btnHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHoaDonActionPerformed
        if (!isAccess()) {
            return;
        }
        showForm(new BillManagementView());
    }//GEN-LAST:event_btnHoaDonActionPerformed

    private void btnDoiMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoiMatKhauActionPerformed
        showForm(new ChangePasswordView());
    }//GEN-LAST:event_btnDoiMatKhauActionPerformed

    private void btnThongKeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThongKeActionPerformed
        if (!isAccess()) {
            return;
        }
        showForm(new StatisticView());
    }//GEN-LAST:event_btnThongKeActionPerformed

    private void btnDangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangXuatActionPerformed
        this.dispose();
        new LoginView().setVisible(true);
    }//GEN-LAST:event_btnDangXuatActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        if (tableThanhToan.getRowCount() == 0) {
            MsgBox.notify("Vui lòng chọn sản phẩm trước.", this);
            return;
        }
        PaymentView paymentView = new PaymentView(tableThanhToan, lblTongTien.getText());
        paymentView.setVisible(true);
        paymentView.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosed(WindowEvent e) {
                tableThanhToan.setRowCount(0);
                lblTongTien.setText("0.000đ");
            }
        });
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void tblDatHangMouseClicked(MouseEvent evt) {//GEN-FIRST:event_tblDatHangMouseClicked
        int selectRow = tblDatHang.getSelectedRow();

        decreaseCostInTable(selectRow);
        decreaseAmount(selectRow);
        lblTongTien.setText(getTongTien());
    }//GEN-LAST:event_tblDatHangMouseClicked

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        tableThanhToan.setRowCount(0);
        lblTongTien.setText("0.000đ");
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        Category a = ((Category) comboboxLoai.getSelectedItem());
        List<Product> snList = sanPhamDAO.selectByTen(txtTimKiem.getText(), a.getMaLoaiSanPham());
        fillToBoard(snList);
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        fillLoai();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbxLoaiSanPham2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxLoaiSanPham2ItemStateChanged
        Category lsp = (Category) comboboxLoai.getSelectedItem();
        if (lsp != null) {
            List sanPhamList = sanPhamDAO.selectByTen(txtTimKiem.getText(), lsp.getMaLoaiSanPham());
            fillToBoard(sanPhamList);
        }
    }//GEN-LAST:event_cbxLoaiSanPham2ItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPanel SanPhamBoard;
    private javax.swing.JButton btnDangXuat;
    private javax.swing.JButton btnDoiMatKhau;
    private javax.swing.JButton btnHoaDon;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnLoaiSanPham;
    private javax.swing.JButton btnLuong;
    private javax.swing.JButton btnNhanVien;
    private javax.swing.JButton btnOrder;
    private javax.swing.JButton btnSanPham;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThongKe;
    private javax.swing.JComboBox<String> cbxLoaiSanPham2;
    public static javax.swing.JDesktopPane desktop;
    private javax.swing.JButton jButton1;
    private JLabel jLabel2;
    private JLabel jLabel6;
    private JPanel jPanel12;
    private JPanel jPanel13;
    private JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private JLabel lblMenu;
    private JLabel lblTongTien;
    private JPanel pnlHome;
    private JPanel pnlMenu;
    private JPanel pnlOrder;
    private JPanel pnlSanPham;
    private JPanel pnlScreenMain;
    private JPanel pnlThanhToan;
    private javax.swing.JTable tblDatHang;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    private void initialization() {
        tableThanhToan = (DefaultTableModel) tblDatHang.getModel();
        comboboxLoai = (DefaultComboBoxModel) cbxLoaiSanPham2.getModel();

        loaiSanPhamDAO = new CategoryDAO();
        sanPhamDAO = new ProductDAO();

        fillLoai();
    }

    public void showForm(JComponent form) {
        this.alignSubForm(form);
        desktop.add(form);
        form.setVisible(true);
    }

    // căn form con ra giữa
    private void alignSubForm(JComponent form) {
        form.setLocation(this.getWidthCenter(form), this.getHeightCenter(form));
    }

    // lấy chiều ngang để căn form con ra giữa
    private int getWidthCenter(JComponent form) {
        int widthSuper = this.getWidth();
        int widthSub = form.getWidth();
        return (widthSuper - widthSub) / 2;
    }

    // lấy dài để căn form con ra giữa
    private int getHeightCenter(JComponent form) {
        int heightSuper = this.getHeight();
        int heightSub = form.getHeight();
        return (heightSuper - heightSub) / 2;
    }

    private boolean isAccess() {
        if (!Auth.isManger()) {
            MsgBox.notify("Ban khong co quyen!", this);
            return false;
        }
        return true;
    }

    private void fillLoai() {
        comboboxLoai.removeAllElements();
        loaiSanPhamDAO.selectAll().forEach((x) -> {
            comboboxLoai.addElement(x);
        });
    }

    private void fillToBoard(List<Product> sanPhamList) {
        deleteBoard(SanPhamBoard);

        double row = (double) sanPhamList.size() / 3;
        int heightBoard = (int) (Math.ceil(row) * 200 + Math.ceil(row) * 20); // chieu dai cua bang chua san pham
        SanPhamBoard.setPreferredSize(new Dimension(677, heightBoard)); // SET kich thuoc cho bang san pham

        sanPhamList.forEach((x) -> {
            createMiniBoard(x);
        });
    }

    private void createMiniBoard(Product sp) {
        JPanel board = new JPanel(null);
        Dimension size = new Dimension(206, 200);
        board.setPreferredSize(size);
        board.setSize(size);

        board.add(createName(sp.getTenSanPham()));
        board.add(createCost(sp.getDonGia()));
        board.add(createImage(sp.getHinhAnh()));

        board.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                fillDatHang(sp);
            }
        });

        board.setCursor(new Cursor(Cursor.HAND_CURSOR));

        SanPhamBoard.add(board);
    }

    private JLabel createName(String name) {
        JLabel lblName = new JLabel(name);
        lblName.setFont(new Font("monospaced", Font.BOLD, 14));
        lblName.setBounds(1, 169, 206, 30);
        lblName.setHorizontalAlignment(JLabel.CENTER);
        lblName.setBackground(Color.white);
        lblName.setOpaque(true);

        return lblName;
    }

    private JLabel createImage(String pathImage) {
        JLabel lblImage = new JLabel();
        lblImage.setBounds(0, 0, 206, 170);
        lblImage.setIcon(ImageHelper.getImage(pathImage, lblImage.getWidth(), lblImage.getHeight()));
        return lblImage;
    }

    private JLabel createCost(int cost) {
        JLabel lblcost = new JLabel(cost + "K");
        lblcost.setForeground(Color.WHITE);
        lblcost.setFont(new Font("tahoma", Font.BOLD, 14));
        lblcost.setHorizontalAlignment(JLabel.CENTER);
        lblcost.setBounds(160, 0, 50, 50);
        lblcost.setBackground(Color.GREEN);
        lblcost.setOpaque(true);

        return lblcost;
    }

    private int index; // kiem tra san pham dang ton tai o dong nao

    private void fillDatHang(Product sp) {
        if (isExisInTable(sp.getMaSanPham())) {
            increaseAmountInTable(index);
            increaseCostInTable(index);
            lblTongTien.setText(getTongTien());
            return;
        }

        try {
            tableThanhToan.addRow(new Object[]{
                sp.getMaSanPham(),
                sp.getTenSanPham(),
                1, // amount
                LocalVietNam.getCurrency(sp.getDonGia())
            });
            lblTongTien.setText(getTongTien());
        } catch (FormatVietNamException vn) {
            MsgBox.notify(vn.getMessage(), this);
        }
    }

    private boolean isExisInTable(String maSanPham) {
        int row = tableThanhToan.getRowCount();

        for (int i = 0; i < row; i++) {
            String nameInTable = tableThanhToan.getValueAt(i, 0).toString();
            if (maSanPham.equalsIgnoreCase(nameInTable)) {
                index = i;
                return true;
            }
        }
        return false;
    }

    private void increaseAmountInTable(int row) {
        int amount = (int) tblDatHang.getValueAt(row, 2);
        tblDatHang.setValueAt(++amount, row, 2);
    }

    private void increaseCostInTable(int row) {
        String maSp = (String) tableThanhToan.getValueAt(row, 0);
        Product sp = sanPhamDAO.selectByID(maSp);

        int amount = (int) tableThanhToan.getValueAt(row, 2);
        try {
            tblDatHang.setValueAt(LocalVietNam.getCurrency(sp.getDonGia() * amount), row, 3);
        } catch (FormatVietNamException e) {
            tblDatHang.setValueAt("error", row, 3);
        }
    }

    private void decreaseAmount(int row) {
        int amount = (int) tableThanhToan.getValueAt(row, 2);
        if (amount == 1) {
            tableThanhToan.removeRow(row);
            return;
        }
        tableThanhToan.setValueAt(--amount, row, 2);
    }

    private void decreaseCostInTable(int row) {
        String maSp = (String) tableThanhToan.getValueAt(row, 0);
        Product sp = sanPhamDAO.selectByID(maSp);

        String costs = (String) tblDatHang.getValueAt(row, 3);
        int price = Integer.parseInt(costs.substring(0, costs.indexOf(".")));
        try {
            tblDatHang.setValueAt(LocalVietNam.getCurrency(price - sp.getDonGia()), row, 3);
        } catch (FormatVietNamException vn) {
            tblDatHang.setValueAt("error", row, 3);
        }
    }

    private String getTongTien() {
        int tongTien = 0;

        for (int i = 0; i < tableThanhToan.getRowCount(); i++) {
            String maSp = (String) tableThanhToan.getValueAt(i, 0);
            int amount = Integer.parseInt(tableThanhToan.getValueAt(i, 2).toString());
            Product sp = sanPhamDAO.selectByID(maSp);
            tongTien += (amount * sp.getDonGia());
        }

        try {
            return LocalVietNam.getCurrency(tongTien);
        } catch (Exception e) {
            return e.getMessage();
        }
    }

    private void deleteBoard(JPanel sanPhamBoard) {
        sanPhamBoard.removeAll();
        sanPhamBoard.revalidate();
        sanPhamBoard.repaint();
    }
}
